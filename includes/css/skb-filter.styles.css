#skb-filter-container {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-flow: column nowrap;
          flex-flow: column nowrap;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
  -webkit-box-align: stretch;
      -ms-flex-align: stretch;
          align-items: stretch;
  color: #0b0b0e; }

.skb-wrapper {
  -webkit-box-flex: 1;
      -ms-flex: 1;
          flex: 1;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-flow: column nowrap;
          flex-flow: column nowrap;
  margin: 0.5rem;
  position: relative;
  min-width: 25%; }

.skb-filter-title {
  position: relative;
  -webkit-box-flex: 0;
      -ms-flex: 0;
          flex: 0;
  cursor: pointer;
  text-align: center;
  font-size: large;
  font-weight: bold;
  text-transform: capitalize;
  background-color: #55163c;
  color: #f8f8f9; }
  .skb-filter-title:hover, .skb-filter-title:active {
    background-color: #c0da49;
    color: #0a0a0c; }

.skb-filter-list {
  -webkit-box-shadow: inset 0 6px 3px -2px #86869d;
          box-shadow: inset 0 6px 3px -2px #86869d;
  position: absolute;
  top: 2.2rem;
  z-index: 50;
  -webkit-box-flex: 1;
      -ms-flex: 1;
          flex: 1;
  list-style-type: none;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-flow: column nowrap;
          flex-flow: column nowrap;
  width: 100%;
  margin: 0;
  padding: 0.25rem 0 0;
  background-color: #e6e6ea; }

.skb-filter-list + .skb-filter-title {
  margin-top: 1rem; }

.skb-filter {
  text-transform: capitalize;
  -webkit-box-flex: 1;
      -ms-flex: 1;
          flex: 1;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
      -ms-flex-flow: row nowrap;
          flex-flow: row nowrap;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  padding: 0.4rem 0.5rem;
  line-height: 1.2rem; }
  .skb-filter.skb-active-filter {
    background-color: #24c0ff;
    color: #0a0a0c; }
    .skb-filter.skb-active-filter .skb-filter-count {
      color: #0a0a0c; }
  .skb-filter:hover, .skb-filter:focus {
    background-color: #c0da49;
    color: #0a0a0c;
    cursor: pointer; }

.skb-filter-count {
  background-color: #cacad4;
  color: #474757;
  border-radius: 0.15rem;
  padding: 2px 0 0;
  -webkit-box-flex: 1;
      -ms-flex: 1 0 10%;
          flex: 1 0 10%;
  max-width: 2.5rem;
  text-align: center; }

#skb-filter-notice {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
      -ms-flex-flow: row nowrap;
          flex-flow: row nowrap;
  -ms-flex-pack: distribute;
      justify-content: space-around;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  text-align: center;
  font-size: large;
  background-color: #fcd1c0;
  color: #0a0a0c;
  border: 2px solid #f4652f;
  margin: 1rem 0; }
  #skb-filter-notice > span {
    -webkit-box-flex: 1;
        -ms-flex: 1;
            flex: 1;
    text-align: center;
    margin-left: 3rem; }
  #skb-filter-notice #skb-remove-filter {
    cursor: pointer;
    -webkit-box-flex: 1;
        -ms-flex: 1;
            flex: 1;
    max-width: 1rem;
    margin-right: 1rem; }
    #skb-filter-notice #skb-remove-filter:hover, #skb-filter-notice #skb-remove-filter:focus {
      color: #f4652f; }

#skb-filter-colorblocks-container {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
      -ms-flex-flow: row wrap;
          flex-flow: row wrap;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
  -webkit-box-align: start;
      -ms-flex-align: start;
          align-items: flex-start;
  padding: 1rem 0; }

.skb-colorblock {
  cursor: pointer;
  position: relative;
  display: inline-block;
  width: 2rem;
  height: 2rem;
  margin: 0.25rem;
  border: 1px solid #000; }

.skb-active-colorblock {
  border: 3px solid #000; }

/**
 * MEDIA QUERIES
**/
@media all and (min-width: 1024px) {
  #skb-filter-container {
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
        -ms-flex-flow: row wrap;
            flex-flow: row wrap;
    -webkit-box-pack: justify;
        -ms-flex-pack: justify;
            justify-content: space-between; } }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
