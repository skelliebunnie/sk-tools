@import "settings";

$sk-color-block--height: 4rem;
$sk-color-block--min-height: 1rem;

.sk-grid {
	position: relative;
	display: grid;
	// auto-FILL will *add* (empty) columns to fit as many cols as possible into the row
	// auto-FIT will expand the *currently available* cols to fit the row
	grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
	grid-template-rows: auto;
	max-width: 100%;

	&.row { 
		grid-template-columns: 1fr;

		& .sk-palette {
			width: 100%;
		}
	}
}

@for $i from 1 through 12 {
	.sk-grid.grid-col-#{$i} {
		grid-template-columns: repeat(#{$i}, 1fr);
	}

	.sk-grid.gutter-#{$i} {
		grid-gap: 0.5rem * $i;
	}

	.sk-grid-col.width-#{$i} {
		grid-column: span $i;
	}

	.sk-grid-col.height-#{$i} {
		grid-row: span 2;
	}

	.sk-grid-col.start-col-#{$i} {
		grid-column: $i;
	}
}

.sk-grid-col {
	box-sizing: border-box;
	padding: 0.25rem 0.5rem;
}

.sk-grid.column .sk-palette {
	flex-flow: column nowrap;
	min-height: 10rem;

	&.static-blocks .sk-color-block {
		min-height: $sk-color-block--height;
		max-height: auto;
	}

	&.slide-blocks {
		min-height: auto;
		justify-content: flex-start;

		.sk-color-block { max-height: auto;}

		.sk-color-block:hover {
			max-height: stretch;
			min-height: $sk-color-block--height;
		}
	} 

	@for $i from 1 through 12 {
		&.colors--#{$i} .sk-color-block,
		&.slide-blocks.colors--#{$i} .sk-color-block {
			max-height: auto;
			flex: 1 1 ($i / 12 * 100%) / 12;
		}

		&.slide-blocks.colors--#{$i} .sk-color-block:hover {
			max-height: stretch;
			flex: 1 1 ($i / 12 * 100%) / 2;
		}
	}
}

.sk-palette {
	display: flex;
	flex-flow: row nowrap;
	padding: 0;

	justify-content: center;
	align-items: stretch;

	&.static-blocks .sk-color-block,
	&:hover .sk-color-block {
		height: $sk-color-block--height;
	}
}

.sk-grid[data-show-color-as*=",hex,"] .sk-palette,
.sk-grid[data-show-color-as*=",hsl,"] .sk-palette,
.sk-grid[data-show-color-as*=",rgb,"] .sk-palette,
.sk-grid[data-show-color-as*=",name,"] .sk-palette {
	&.static-blocks .sk-color-block,
	&.slide-blocks .sk-color-block:hover,
	&:hover .sk-color-block {
		min-height: 5.25rem;
	}
}

.sk-grid[data-show-color-as="all"] .sk-palette {
	&.static-blocks .sk-color-block,
	&.slide-blocks .sk-color-block:hover,
	&:hover .sk-color-block {
		min-height: 7rem;
	}
}

@for $i from 1 through 12 {
	.colors--#{$i} .sk-color-block {
		flex: 1 0 (($i / 12) * 100%) / 12;
	}

	.colors--#{$i}.slide-blocks .sk-color-block:hover {
		flex: 1 0 (($i / 12) * 100%) / 2;
	}
}

.slide-blocks {
	.sk-color-block {
		max-width: auto;
		min-height: $sk-color-block--min-height;
	}

	.sk-color-block:hover {
		max-width: stretch;
		min-height: stretch;
	}
}

.slide-text,
.fade-text {
	.sk-color-block:hover .sk-color-content {
		opacity: 1;
	}
}

.slide-text {

	&.text-up .sk-color-content { bottom: -10%; }
	&.text-up .sk-color-block:hover .sk-color-content { bottom: 0; }

	&.text-down .sk-color-content { top: -10%; }
	&.text-down .sk-color-block:hover .sk-color-content { top: 0; }

	&.text-right .sk-color-content { left: -100%; }
	&.text-right .sk-color-block:hover .sk-color-content { left: 0; right: auto; }

	&.text-left .sk-color-content { right: -100%; }
	&.text-left .sk-color-block:hover .sk-color-content { right: 0; left: auto; }
}

.sk-palette.show-text .sk-color-content {
	opacity: 1;
	padding: 0;
	top: 0;
}

.sk-color-block {
	flex: 1;
	padding: 0;
	text-align: center;
	position: relative;
	min-height: $sk-color-block--min-height;
	min-width: 1rem;
	max-width: auto;
	overflow: hidden;

	transition: all .3s ease-out;
}

.sk-color-content {
	position: absolute;
	width: 100%;
	height: 100%;
	padding: 0.2rem;
	margin-top: 0.2rem;
	left: 0;
	text-align: center;
	opacity: 0;

	transition: all .3s ease-out;

	& > span { display: inline-block; }
}

.sk-palette--container .sk-palette--title {
	font-weight: bold;
	text-align: center;
	padding: 0;
	margin: 0;
}

@media all and (max-width: 1024px) {
	@for $i from 1 through 12 {
		.sk-grid.grid-col-#{$i} {
			grid-template-columns: repeat(#{$i}, minmax(250px, 1fr));
		}
	}
}